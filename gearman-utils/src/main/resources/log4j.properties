#log4j 默认第一个logger为root，需要为root定义级别
log4j.rootLogger=DEBUG,console,errorFile,warnFile

# 格式化参数列表：
# https://logging.apache.org/log4j/2.x/manual/layouts.html
# %c 输出的logger 名
# %d{格式化} 输出日期
# %throwable 异常跟踪
# %F 文件名
# %L 行数
# %m 输出信息
# %M 输出函数
# %p 输出级别
# %t 线程名
# %n 换行符
# %X{} 获取线程上下文中的信息 需要通过NDC和MDC来输入

# 控制台输出
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Threshold=DEBUG
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[SYSTEM] %d{yyyy-MM-dd HH:mm:ss} [%5p]  [%t] [%M] (%F:%L) - %m%n


# 写文件
#只输出ERROR级别以上的日志
log4j.appender.errorFile=org.apache.log4j.RollingFileAppender
log4j.appender.errorFile.File= logs/error.log
log4j.appender.errorFile.Threshold=ERROR
log4j.appender.errorFile.MaxFileSize=10240KB
log4j.appender.errorFile.MaxBackupIndex=1
log4j.appender.errorFile.layout=org.apache.log4j.PatternLayout
log4j.appender.errorFile.layout.ConversionPattern=[SYSTEM] %d{yyyy-MM-dd HH:mm:ss} [%5p]  [%t] [%M] (%F:%L) - %m%n


# 按日期分割文件
# DatePattern 确定分割范围
log4j.appender.warnFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.warnFile.file=logs/warn.log
log4j.appender.warnFile.layout=org.apache.log4j.PatternLayout
log4j.appender.warnFile.DatePattern='.'yyyy-MM-dd-HH
log4j.appender.warnFile.filter.ID=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.warnFile.filter.ID.levelMin=WARN
log4j.appender.warnFile.filter.ID.levelMax=WARN
log4j.appender.warnFile.layout.ConversionPattern=[SYSTEM] %d{yyyy-MM-dd HH:mm:ss} %X{myInfo} [%5p]  [%t] [%M] (%F:%L) - %m%n